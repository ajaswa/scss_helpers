@mixin border-radius( $r ) {
  // $r: radius, can use 5px 10px 10px 5px
  -moz-border-radius: $r;
  -webkit-border-radius: $r;
  border-radius: $r;
}

@mixin box-shadow( $args ) {
  // $args: standard CSS including inset
  -webkit-box-shadow: $args;
  -o-box-shadow: $args;
  -moz-box-shadow: $args;
  box-shadow: $args;
}

@mixin lin-gradient( $color: #ccc, $start: #000, $stop: #fff, $point: 'top' ) {
  // $color: default bg color for non-complient browsers
  // $start: hex of the start
  // $stop:  hex of the stop
  // $point: top? 
  background: $color;
  background: -webkit-gradient(linear, left top, left bottom, color-stop(0%, $start), color-stop(100%, $stop)); /* Safari 4+, old Chrome */
  background: -webkit-linear-gradient($point, $start, $stop); /* Safari 5.1+, Chrome */
  background: -moz-linear-gradient($point, $start, $stop); /* FF 3.6+ */
  background: -ms-linear-gradient($point, $start, $stop); /* IE10 */
  background: -o-linear-gradient($point, $start, $stop); /* Opera */
  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#{$start}', endColorstr='#{$stop}'); /* IE6 & IE7 */
  -ms-filter: "progid:DXImageTransform.Microsoft.gradient(startColorstr='#{$start}', endColorstr='#{$stop}')"; /* IE8+ */
  background: linear-gradient($point, $start, $stop);
}

@mixin circle( $r ) {
  // $r: radius
  @include border-radius($r);
  height: ($r * 2);
  width: ($r * 2);
}

@mixin inline-block() {
  display: inline-block;
  .ie7 & {
    display: inline;
    zoom: 1;
  }
}

@mixin border-box() {
  -webkit-box-sizing: border-box;
  -moz-box-sizing: border-box;
  box-sizing: border-box;
}

@mixin transition( $args: all .6s linear ) {
  -webkit-transition: $args;
  -moz-transition: $args;
  -ms-transition: $args;
  -o-transition: $args;
  transition: $args;
}

@mixin opacity($opacity: 0.5) {
  -moz-opacity: $opacity;
  -khtml-opacity: $opacity;
  -webkit-opacity: $opacity;
  opacity: $opacity;
}
@mixin background-opacity($color, $alpha) {
  // $color: #000 - #fff, $alpha: 0 - 1
  $rgba: rgba($color, $alpha);
  $ie-alpha: $alpha * 100;
  $ie-hex-str: ie_hex_str($rgba);
  background-color: $rgba;
  filter: alpha(opacity=$ie-alpha);
  .ie & {
    background-color: $color;
  }
}
@mixin transition-duration( $duration: 0.6s ) {
  -moz-transition-duration: $duration;
  -webkit-transition-duration: $duration;
  transition-duration: $duration;
}
@mixin transition-property( $property: all ) {
  -moz-transition-property: $property;
  -webkit-transition-property: $property;
  transition-property: $property;
}
@mixin rotation( $deg: 90deg ) {
  -webkit-transform: rotate( $deg );
  -moz-transform: rotate( $deg );
  transform: rotate( $deg );
}
@mixin rotateX( $deg: 90deg ) {
  -webkit-transform: rotateX( $deg );
  -moz-transform: rotateX( $deg );
  transform: rotateX( $deg );
}

@mixin rotateY( $deg: 90deg ) {
  -webkit-transform: rotateY( $deg );
  -moz-transform: rotateY( $deg );
  transform: rotateY( $deg );
}
@mixin scale( $ratio: 1.5 ) {
  -webkit-transform: scale( $ratio );
  -moz-transform: scale( $ratio );
  transform: scale( $ratio );
}
@mixin translate( $x: 0, $y: 0 ) {
  -moz-transform: translate( $x, $y );
  -webkit-transform: translate( $x, $y );
  -o-transform: translate( $x, $y );
  -ms-transform: translate( $x, $y );
  transform: translate( $x, $y );
}

@mixin clear() {
  clear: both;
  display: block;
  overflow: hidden;
  visibility: hidden;
  width: 0;
  height: 0;
}

@mixin text-gradient($start, $stop) {
  background:-webkit-linear-gradient(top,$start,$stop);
  -webkit-text-fill-color: transparent;
  -webkit-background-clip: text;
}
@mixin text-shadow($x, $y, $color, $b: 0) {
  // $color: hex color of the shadow
  // $x: x-offset
  // $y: y-offset
  // $b: blur
  //filter: "progid:DXImageTransform.Microsoft.DropShadow(color='#{$color}', offx='#{$x}', offy='#{$y}')";
  //-ms-filter: "progid:DXImageTransform.Microsoft.DropShadow(color='#{$color}', offx='#{$x}', offy='#{$y}')";
  text-shadow: $x+px $y+px $b+px $color;
}
@mixin font( $font-name, $font-url ) {
  // $font-name: The name of the font to use
  // $font-url:  The url to given font sans the ext.
  @font-face {
    font-family: '#{$font-name}';
    src: url('#{$font-url}.eot?#iefix') format('embedded-opentype'),
         url('#{$font-url}.woff') format('woff'),
         url('#{$font-url}.ttf')  format('truetype'),
         url('#{$font-url}.svg#svg#{$font-name}') format('svg');
  }
}

@mixin sticky() {
  position: -webkit-sticky;
  position: -moz-sticky;
  position: -o-sticky;
  position: -ms-sticky;
  position: sticky;
}
